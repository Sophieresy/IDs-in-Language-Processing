data3_al$Proficiency <- as.factor(data3_al$Proficiency)
###other preliminary stuff
data3_al$subj <- as.factor(data3_al$Subject)
contrasts(data3_al$Proficiency)
contrasts(data3_al$Proficiency) <- contr.sum(2)/2
contrasts(data3_al$Proficiency)
m1_al <- lmer(log ~ condition_new_new*Proficiency + Trial+
(1+condition_new_new*Proficiency|item)+
(1+condition_new_new|subj), data3_al, REML=F)
summary(m1_al)
data4 <- subset(data2, Condition=="T1"|Condition=="T3" | Condition=="T5" | Condition=="T6")
data4 <- droplevels(data4)
##### change baseline to pragmatic condition and high proficiency
data4$condition_new <- as.factor(data4$condition_new)
data4$Proficiency <- as.factor(data4$Proficiency)
data4$condition_new<- relevel(data4$condition_new, "T1_pragmatic")
contrasts(data4$Proficiency) <- contr.sum(2)/2
###other preliminary stuff
data4$subj <- as.factor(data4$Subject)
contrasts(data4$Proficiency)
### maximal model
m4 <- lmer(log ~ condition_new*Proficiency + Trial +
(1+condition_new*Proficiency|item)+
(1+condition_new|subj), data4,
control = lmerControl(calc.derivs = FALSE))
summary(m4)
data_sub <- subset(data, Condition=="T1")
data_sub <- droplevels(data_sub)
summary(data_sub)
contrasts(data_sub$Proficiency) <- contr.sum(2)/2
###simple model with no random slopes
m.acc <- glmer(accuracy ~ TotalSocialSkill+TotalAttentionToDetail+TotalAttentionSwitching+TotalCommunication+Totalimagination+
TotalSystemizing+TotalExtraversion+TotalAgreeableness+TotalConscientiousness+TotalNeuroticism+TotalOpeness+
(1|item),
data = data_sub, family = binomial)
summary(m.acc)
m.acc1 <- glmer(accuracy ~ TotalSocialSkill+TotalAttentionToDetail+Totalimagination+
TotalSystemizing+
(0+TotalSocialSkill+TotalAttentionToDetail+Totalimagination+
TotalSystemizing|item),
data = data_sub, family = binomial)
summary(m.acc1)
### now control for interaction of the two with proficiency in individual models
### we re-introduce random variation by subject, since we got rid of all of the other by-subject variables
### the two models serve to account for two different random effects structures, one for imagination
## and one for social skill
contrasts(data_sub$Proficiency)
m.acc_imagination <- glmer(accuracy ~ Proficiency*Totalimagination+TotalSocialSkill*Proficiency+
(1+Totalimagination||item) +  (1+Totalimagination||subj),
data = data_sub, family = binomial)
summary(m.acc_imagination)
m.acc_social <- glmer(accuracy ~ Proficiency*TotalSocialSkill+ Proficiency*Totalimagination+
(0+TotalSocialSkill|item) +  (0+TotalSocialSkill|subj),
data = data_sub, family = binomial)
summary(m.acc_social)
data_sub$prof.num <- sapply(data_sub$Proficiency,function(i) contr.sum(2)[i,])
m.acc_social_inter <- glmer(accuracy ~ Proficiency*TotalSocialSkill+
(0+prof.num*TotalSocialSkill||item) +  (0+prof.num*TotalSocialSkill||subj),
data = data_sub, family = binomial)
summary(m.acc_social_inter)
###create categorical variable for social skills
#### note that the social skill subscale is counterintuitive: lower values means higher social skills and viceversa
data_sub$social <- ifelse(data_sub$TotalSocialSkill<5, "social","not social")
data_sub$accuracy <- as.numeric(data_sub$accuracy)
acc.summary_social <- summarySEwithin(data_sub, measurevar = "accuracy", withinvars = c( "Proficiency","social"))
acc.summary_social$accuracy <- acc.summary_social$accuracy-1
# plot
pd <- position_dodge(0.4)
ggplot(acc.summary_social, aes(x=Proficiency, y=accuracy, fill=social)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
scale_fill_manual(name="Social Skills",
breaks=c("not social", "social"),
labels=c("Less social", "More social"),values=c("slateblue3", "indianred2", "slateblue3", "indianred2") )+
ggtitle("Average Implicature derivation rate (with 95% CI bars)") +
geom_errorbar(aes(ymin=accuracy-ci, ymax=accuracy+ci), width=.15, position = pd) +
coord_cartesian(ylim=c(0,1))+
scale_y_continuous(breaks=c(seq(0,1,0.1)))+
xlab("Proficiency") +
ylab("0 = Pragmatic                       1 = Logical") +
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
# plot
pd <- position_dodge(0.4)
ggplot(acc.summary_social, aes(x=Proficiency, y=accuracy, fill=social)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
scale_fill_manual(name="Social Skills",
breaks=c("not social", "social"),
labels=c("Less social", "More social"),values=c("slateblue3", "indianred2", "slateblue3", "indianred2") )+
ggtitle("Average Implicature derivation rate (with 95% CI bars)") +
geom_errorbar(aes(ymin=accuracy-ci, ymax=accuracy+ci), width=.15, position = pd) +
coord_cartesian(ylim=c(0,1))+
scale_y_continuous(breaks=c(seq(0,1,0.1)))+
xlab("Proficiency") +
ylab("0 = Pragmatic                       1 = Logical") +
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
options(scipen=999)
## load packages
library(ggplot2)
library(lme4)
library(here)
library(plyr)
library(haven)
library(dplyr)
library(tidyr)
library(labelled)
library(MASS)
library(Rmisc)
data <- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
### look at accuracy by participant excluding critical condition
### check for accuracy in fillers
data_acc <- subset(data, Condition!="T1")
accuracy <- aggregate(accuracy ~ Subject, data_acc, mean)
accuracy
accuracy$score <- accuracy$accuracy
accuracy$accuracy <- NULL
data <- left_join(data, accuracy, by=c("Subject"= "Subject"))
data <- subset(data,score>0.7)
length(unique(data$Subject))
acc.summary <- summarySEwithin(data, measurevar = "accuracy", withinvars = c( "Condition","Proficiency"))
acc.summary
pd <- position_dodge(0.4)
ggplot(acc.summary, aes(x=Condition, y=accuracy, fill=Proficiency)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
scale_fill_manual(name="Proficiency",
breaks=c("low", "high"),
labels=c("Low", "High"),values=c("slateblue3", "indianred2", "slateblue3", "indianred2") )+
ggtitle("Response accuracy for forced-choice task (with 95% CI bars)") +
geom_errorbar(aes(ymin=accuracy-ci, ymax=accuracy+ci), width=.15, position = pd) +
coord_cartesian(ylim=c(0,1))+
scale_y_continuous(breaks=c(seq(0,1,0.1)))+
xlab("Condition") +
ylab("Percentage of correct responses") +
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
### split T1 into logical and pragmatic responses
data$Condition <- as.character(data$Condition)
data$condition_new <- ifelse(data$Condition=="T1" & data$word4.RESP=="TRUE","T1_logic",
ifelse(data$Condition=="T1" & data$word4.RESP=="FALSE","T1_pragmatic", data$Condition))
data$condition_new <- as.factor(as.character(data$condition_new))
data$accuracy_numeric <- as.numeric(as.character(data$accuracy))
acc.summary_sub <- summarySEwithin(data, measurevar = "accuracy_numeric", withinvars = c( "condition_new","Subject","Proficiency"))
acc.summary_sub
nans <- subset(acc.summary_sub, N != 1)
acc.summary_subject <- summarySEwithin(data, measurevar = "accuracy_numeric", withinvars = c("Subject","Proficiency", "Condition"))
acc.summary_subject
acc.summary_item <- summarySEwithin(data, measurevar = "accuracy_numeric", withinvars = c("item","Category","criticalWord"))
acc.summary_item
#### change values of correct to include only controls
data$correct_new <- ifelse(data$Condition=="T1", 1, data$word4.ACC)
##### change baseline to pragmatic condition and high proficiency
data$condition_new <- as.factor(data$condition_new)
data$Proficiency <- as.factor(data$Proficiency)
data$condition_new<- relevel(data$condition_new, "T1_pragmatic")
data$Proficiency<- relevel(data$Proficiency, "high")
###convert relevant columns to categorical
data$subj <- as.factor(data$Subject)
data$Condition <- as.factor(as.character(data$Condition))
data$accuracy <- as.factor(data$accuracy)
contrasts(data$Proficiency) <- contr.sum(2)/2
contrasts(data$Proficiency)
m.acc1 <- glmer(accuracy ~ Proficiency*Condition +
(1|subj)+
(1+Proficiency|item),
data = data, family = binomial, control = glmerControl(calc.derivs = FALSE))
summary(m.acc1)
data_t1 <- subset(data, Condition=="T1")
data_t1 <- droplevels(data_t1)
contrasts(data_t1$Proficiency) <- contr.treatment(2)
contrasts(data_t1$Proficiency)
m.acc2 <- glmer(accuracy ~ Proficiency +
(1|subj)+
(1+Proficiency|item),
data = data_t1, family = binomial, control = glmerControl(calc.derivs = FALSE))
summary(m.acc2)
###remove incorrect trials
data1 <- subset(data, correct_new==1)
data2 <- subset(data1, data1$word4.RT>400)
data2 <- subset(data2, data2$word4.RT<6000)
###percentage removed is less than 3%
10216/10436
m <- lm(word4.RT~ 1, data=data1)
qqnorm(residuals(m))
qqline(residuals(m), col = "red")
Box = boxcox(m,lambda = seq(-6,6,0.1))
Cox = data.frame(Box$x, Box$y)
Cox2 = Cox[with(Cox, order(-Cox$Box.y)),]
Cox2[1,]
lambda = Cox2[1, "Box.x"]
data2$log <- log(data2$word4.RT)
summary <- summarySEwithin(data2, measurevar = "word4.RT", withinvars = c( "condition_new"), betweenvars = c("Proficiency"))
summary_log <- summarySEwithin(data2, measurevar = "log", withinvars = c( "condition_new"), betweenvars = c("Proficiency"))
pd <- position_dodge(0.4)
ggplot(summary, aes(x=condition_new, y=word4.RT, fill=Proficiency)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
theme_bw() +
scale_fill_manual(name="Proficiency",
breaks=c("low", "high"),
labels=c("Low", "High"),values=c("slateblue3", "indianred2", "slateblue3", "indianred2") )+
ggtitle("Reaction times of correct responses (with 95% CI)") +
geom_errorbar(aes(ymin=word4.RT-ci, ymax=word4.RT+ci), width=.2, position = pd) +
xlab(" Condition
") +
ylab("
reaction times (in ms)
") +
coord_cartesian(ylim=c(0,2800))+
scale_y_continuous(breaks=c(seq(0,2800,200)))+
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
pd <- position_dodge(0.4)
ggplot(summary_log, aes(x=condition_new, y=log, fill=Proficiency)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
theme_bw() +
ggtitle("Reaction times (with 95% CI)") +
geom_errorbar(aes(ymin=log-ci, ymax=log+ci), width=.2, position = pd) +
coord_cartesian(ylim=c(7,7.7))+
scale_y_continuous(breaks=c(seq(7,7.7,0.1)))+
xlab(" Condition
") +
ylab("
reaction times (in log-ms)
") +
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
data3 <- subset(data2, Condition=="T1"|Condition=="T4" | Condition=="T5")
data3 <- droplevels(data3)
##### change baseline to pragmatic condition and high proficiency
data3$condition_new <- as.factor(data3$condition_new)
data3$Proficiency <- as.factor(data3$Proficiency)
data3$condition_new<- relevel(data3$condition_new, "T1_logic")
data3$Proficiency<- relevel(data3$Proficiency, "high")
levels(data3$condition_new)
###other preliminary stuff
data3$subj <- as.factor(data3$Subject)
contrasts(data3$Proficiency)
### maximal model
m1 <- lmer(log ~ condition_new*Proficiency + Trial +
(1+condition_new*Proficiency|item)+
(1+condition_new|subj), data3,
control = lmerControl(calc.derivs = FALSE),REML=F)
summary(m1)
m0 <- lmer(log ~ condition_new+Proficiency + Trial +
(1+condition_new*Proficiency|item)+
(1+condition_new|subj), data3,
control = lmerControl(calc.derivs = FALSE),REML=F)
anova(m0,m1)
data3_al <- subset(data2, Condition=="T1"|Condition=="T4" | Condition=="T2")
levels(data3_al$condition_new)
data3_al$condition_new<- relevel(data3_al$condition_new, "T1_logic")
data3_al$condition_new_new <- ifelse(data3_al$Condition=="T2"|data3_al$Condition=="T4", "T24", data3_al$condition_new)
data3_al$condition_new_new <- as.factor((as.character(data3_al$condition_new_new)))
levels(data3_al$condition_new_new)
data3_al <- droplevels((data3_al))
data3_al$Proficiency <- as.factor(data3_al$Proficiency)
###other preliminary stuff
data3_al$subj <- as.factor(data3_al$Subject)
contrasts(data3_al$Proficiency)
contrasts(data3_al$Proficiency) <- contr.sum(2)/2
contrasts(data3_al$Proficiency)
m1_al <- lmer(log ~ condition_new_new*Proficiency + Trial+
(1+condition_new_new*Proficiency|item)+
(1+condition_new_new|subj), data3_al, REML=F)
summary(m1_al)
data4 <- subset(data2, Condition=="T1"|Condition=="T3" | Condition=="T5" | Condition=="T6")
data4 <- droplevels(data4)
##### change baseline to pragmatic condition and high proficiency
data4$condition_new <- as.factor(data4$condition_new)
data4$Proficiency <- as.factor(data4$Proficiency)
data4$condition_new<- relevel(data4$condition_new, "T1_pragmatic")
contrasts(data4$Proficiency) <- contr.sum(2)/2
###other preliminary stuff
data4$subj <- as.factor(data4$Subject)
contrasts(data4$Proficiency)
### maximal model
m4 <- lmer(log ~ condition_new*Proficiency + Trial +
(1+condition_new*Proficiency|item)+
(1+condition_new|subj), data4,
control = lmerControl(calc.derivs = FALSE))
summary(m4)
data_sub <- subset(data, Condition=="T1")
data_sub <- droplevels(data_sub)
summary(data_sub)
contrasts(data_sub$Proficiency) <- contr.sum(2)/2
###simple model with no random slopes
m.acc <- glmer(accuracy ~ TotalSocialSkill+TotalAttentionToDetail+TotalAttentionSwitching+TotalCommunication+Totalimagination+
TotalSystemizing+TotalExtraversion+TotalAgreeableness+TotalConscientiousness+TotalNeuroticism+TotalOpeness+
(1|item),
data = data_sub, family = binomial)
summary(m.acc)
m.acc1 <- glmer(accuracy ~ TotalSocialSkill+TotalAttentionToDetail+Totalimagination+
TotalSystemizing+
(0+TotalSocialSkill+TotalAttentionToDetail+Totalimagination+
TotalSystemizing|item),
data = data_sub, family = binomial)
summary(m.acc1)
### now control for interaction of the two with proficiency in individual models
### we re-introduce random variation by subject, since we got rid of all of the other by-subject variables
### the two models serve to account for two different random effects structures, one for imagination
## and one for social skill
contrasts(data_sub$Proficiency)
m.acc_imagination <- glmer(accuracy ~ Proficiency*Totalimagination+TotalSocialSkill*Proficiency+
(1+Totalimagination||item) +  (1+Totalimagination||subj),
data = data_sub, family = binomial)
summary(m.acc_imagination)
m.acc_social <- glmer(accuracy ~ Proficiency*TotalSocialSkill+ Proficiency*Totalimagination+
(0+TotalSocialSkill|item) +  (0+TotalSocialSkill|subj),
data = data_sub, family = binomial)
summary(m.acc_social)
data_sub$prof.num <- sapply(data_sub$Proficiency,function(i) contr.sum(2)[i,])
m.acc_social_inter <- glmer(accuracy ~ Proficiency*TotalSocialSkill+
(0+prof.num*TotalSocialSkill||item) +  (0+prof.num*TotalSocialSkill||subj),
data = data_sub, family = binomial)
summary(m.acc_social_inter)
###create categorical variable for social skills
#### note that the social skill subscale is counterintuitive: lower values means higher social skills and viceversa
data_sub$social <- ifelse(data_sub$TotalSocialSkill<5, "social","not social")
data_sub$accuracy <- as.numeric(data_sub$accuracy)
acc.summary_social <- summarySEwithin(data_sub, measurevar = "accuracy", withinvars = c( "Proficiency","social"))
acc.summary_social$accuracy <- acc.summary_social$accuracy-1
# plot
pd <- position_dodge(0.4)
ggplot(acc.summary_social, aes(x=Proficiency, y=accuracy, fill=social)) +
geom_bar(stat = "identity", position="dodge", colour="black", width = 0.4) +
scale_fill_manual(name="Social Skills",
breaks=c("not social", "social"),
labels=c("Less social", "More social"),values=c("slateblue3", "indianred2", "slateblue3", "indianred2") )+
ggtitle("Average Implicature derivation rate (with 95% CI bars)") +
geom_errorbar(aes(ymin=accuracy-ci, ymax=accuracy+ci), width=.15, position = pd) +
coord_cartesian(ylim=c(0,1))+
scale_y_continuous(breaks=c(seq(0,1,0.1)))+
xlab("Proficiency") +
ylab("0 = Pragmatic                       1 = Logical") +
theme(axis.title=element_text(face="bold", size="12"),
axis.text=element_text(face="bold", size="12"))
help("distinct")
help(principal)
install.packages("psych")
help(principal)
library('Hmisc')
library('principal')
library('psych')
library('psych')
help(principal)
library('Hmisc')
library('psych')
#personality <- personality %>% select(Subject, column2)
#personality <- personality %>% select(Subject, column2)
#
personality
personality
library('Hmisc')
library('psych')
library(dplyr)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality
library('Hmisc')
library('psych')
library(dplyr)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
View(personality)
View(personality)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
library('Hmisc')
library('psych')
library(dplyr)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
library('corrplot')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
library('Hmisc')
library('psych')
library(dplyr)
library('corrplot')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
library(Hmisc)
library(psych)
library(dplyr)
library(corrplot)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
library(Hmisc)
library(psych)
library(dplyr)
library(corrplot)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(res$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
###pca
pca1 <- psych::principal(personality, nfactors = 5, rotate = "none")
View(pca1)
View(pca1)
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
###pca
pca1 <- psych::principal(personality, nfactors = 7, rotate = "none")
biplot(pca1)
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
###pca
pca1 <- psych::principal(personality, nfactors = 7, rotate = "none")
summary(pca_result)
plot(pca1, type = "l", main = "Scree Plot")
plot(pca1, type = "l", main = "Scree Plot")
plot(pca1, type = "l", main = "Scree Plot")
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
###pca
pca1 <- psych::principal(personality, nfactors = 7, rotate = "none")
summary(pca1)
plot(eigenvalues, type = "b", xlab = "Principal Component", ylab = "Eigenvalue",
main = "Scree Plot", pch = 19)
abline(h = 1, col = "red", lty = 2) # Optional: Kaiser criterion line
biplot(pca1)
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(Subject,TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
###pca
pca1 <- psych::principal(personality, nfactors = 7, rotate = "none")
summary(pca1)
eigenvalues <- pca1$values
plot(eigenvalues, type = "b", xlab = "Principal Component", ylab = "Eigenvalue",
main = "Scree Plot", pch = 19)
abline(h = 1, col = "red", lty = 2) # Optional: Kaiser criterion line
biplot(pca1)
round(pca1$values,2)
library(factoextra)
install.packages("factoextra")
library(factoextra)
library('Hmisc')
library('corrplot')
library('ggplot2')
library('dplyr')
library(factoextra)
personality<- read.table(here::here("data", "data_L2_scalars.csv"), header=T, sep= ",")
personality <- personality %>% distinct(Subject, .keep_all = TRUE)
personality <- personality %>% select(TotalSocialSkill, TotalAttentionToDetail,TotalAttentionSwitching, TotalCommunication, Totalimagination, TotalSystemizing,  TotalExtraversion, TotalAgreeableness, TotalConscientiousness, TotalNeuroticism, TotalOpeness)
Summary(personality)
###correlation Matrix
correlation <- rcorr(as.matrix(personality))
corrplot(correlation$r, type="lower", order="hclust",diag=0,insig = "blank",addCoef.col = 'black')
#pca tutorial
personalityPCA <- prcomp(personality, scale =TRUE)
summary(personalityPCA)
